kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")
# Immediately surrounding countries
surrounding_countries <- c("Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load major lakes and rivers
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
# Filter for Lake Victoria
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Intersect rivers with Kenya's boundary for major waterways within Kenya
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
context_countries
# Read the administrative and national boundary shapefiles
kenya_regions <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_region_boundary.zip/kenya_administrative_region_boundary/kenya_administrative_region_boundary.shp")
kenya_national_boundary <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_national_boundary.zip/kenya_administrative_national_boundary/kenya_administrative_national_boundary.shp")
# Load the world map for neighboring countries context
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_and_neighbors <- world[world$admin %in% c("Kenya", "Somalia", "Ethiopia", "South Sudan", "Uganda", "Tanzania"), ]
# Load major rivers and select those in Kenya (intersects with kenya_national_boundary for accurate scoping)
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
rivers_in_kenya <- st_intersection(rivers, kenya_national_boundary)
# Load major lakes and filter for Lake Victoria
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Immediately surrounding countries
surrounding_countries <- c("Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load major lakes and rivers
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
# Filter for Lake Victoria
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Intersect rivers with Kenya's boundary for major waterways within Kenya
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")################################################################################
world <- ne_countries(scale = "medium", returnclass = "sf")
# Immediately surrounding countries
surrounding_countries <- c("Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load and filter for Lake Victoria
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Load and prepare major waterways within Kenya
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object for intersection
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
geom_sf(data = kenya_major_roads, color = "red", size = 0.5) + # Major roads
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria, Major Waterways, and Roads") +
theme(legend.position = "none")
# Immediately surrounding countries
surrounding_countries <- c("Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load and filter for Lake Victoria
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Load and prepare major waterways within Kenya
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object for intersection
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria, Major Waterways, and Roads") +
theme(legend.position = "none")
library(rnaturalearth)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Print unique country names to check the exact name of Tanzania and others
unique(world$admin)
# Read the administrative and national boundary shapefiles
kenya_regions <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_region_boundary.zip/kenya_administrative_region_boundary/kenya_administrative_region_boundary.shp")
kenya_national_boundary <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_national_boundary.zip/kenya_administrative_national_boundary/kenya_administrative_national_boundary.shp")
# Load the world map for neighboring countries context
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_and_neighbors <- world[world$admin %in% c("Kenya", "Somalia", "Ethiopia", "South Sudan", "Uganda", "United Republic of Tanzania"), ]
# Load major rivers and select those in Kenya (intersects with kenya_national_boundary for accurate scoping)
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
rivers_in_kenya <- st_intersection(rivers, kenya_national_boundary)
# Load major lakes and filter for Lake Victoria
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Immediately surrounding countries
surrounding_countries <- c("Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load major lakes and rivers
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
# Filter for Lake Victoria
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Intersect rivers with Kenya's boundary for major waterways within Kenya
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")################################################################################
kenya_and_neighbors
# Immediately surrounding countries
surrounding_countries <- c("United Republic of Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load major lakes and rivers
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
# Filter for Lake Victoria
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Intersect rivers with Kenya's boundary for major waterways within Kenya
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")################################################################################
# Figure 2. Latest DR Marker prevalence Histogram (2021, or combined 2019-2021)
# A. Historgam of 2021 Prevalences of Validated DR Markers in crt, mdr1, dhfr, dhps
################################################################################
if (!requireNamespace("ggspatial", quietly = TRUE)) install.packages("ggspatial")
library(ggspatial)
ggplot() +
# Background color for ocean/water bodies
annotation_custom(rasterGrob(gpar(fill = "#88d8b0"), width = unit(1,"npc"), height = unit(1,"npc")),
xmin = -180, xmax = 180, ymin = -90, ymax = 90) +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "#88d8b0", color = "#88d8b0", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "#88d8b0", size = 0.5) + # Major waterways
geom_sf(data = kenya_major_roads, color = "red", size = 0.5, linetype = "dashed") + # Major roads
annotation_scale(location = "br", width_hint = 0.5) + # Scale bar at bottom right
# Add a simple compass
annotate("text", x = 35, y = -2, label = "N", size = 6, color = "black") +
annotate("segment", x = 35, xend = 35, y = -1, yend = 0, colour = "black") +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Featuring Lake Victoria, Major Waterways, and Roads") +
theme(legend.position = "none",
plot.background = element_rect(fill = "#b3e5fc"), # Setting plot background color for ocean
panel.background = element_rect(fill = "#b3e5fc")) # Ensuring panel background matches
library(grid)
# Install and load required packages
if (!requireNamespace("ggspatial", quietly = TRUE)) install.packages("ggspatial")
library(ggspatial)
# Assuming previous steps for loading and preparing your data
# Proceed with plotting
ggplot() +
# Background color for ocean/water bodies
annotation_custom(rasterGrob(gpar(fill = "#88d8b0"), width = unit(1,"npc"), height = unit(1,"npc")),
xmin = -180, xmax = 180, ymin = -90, ymax = 90) +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "#88d8b0", color = "#88d8b0", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "#88d8b0", size = 0.5) + # Major waterways
geom_sf(data = kenya_major_roads, color = "red", size = 0.5, linetype = "dashed") + # Major roads
annotation_scale(location = "br", width_hint = 0.5) + # Scale bar at bottom right
# Add a simple compass
annotate("text", x = 35, y = -2, label = "N", size = 6, color = "black") +
annotate("segment", x = 35, xend = 35, y = -1, yend = 0, colour = "black") +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Featuring Lake Victoria, Major Waterways, and Roads") +
theme(legend.position = "none",
plot.background = element_rect(fill = "#b3e5fc"), # Setting plot background color for ocean
panel.background = element_rect(fill = "#b3e5fc")) # Ensuring panel background matches
# Plotting
ggplot() +
# Set the plot background color, which indirectly colors the ocean
theme(panel.background = element_rect(fill = "#88d8b0")) +
geom_sf(data = world, fill = "lightgrey", color = NA) + # World countries in light grey for context
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) +
geom_sf(data = lake_victoria, fill = "blue", color = "darkblue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "darkblue", size = 0.5) + # Major waterways
annotation_scale(location = "br", width_hint = 0.5) + # Scale bar at bottom right
# Add a simple compass
annotate("text", x = 40, y = -4, label = "N", size = 6, hjust = 0.5, vjust = 0.5, color = "black") +
annotate("segment", x = 40, xend = 40, y = -1, yend = 0, colour = "black") +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Featuring Lake Victoria, Major Waterways") +
theme_void() # Use theme_void() for a clean background, adjust as needed
map <- ggplot() +
annotation_custom(ggplot2::rectGrob(gp = grid::gpar(fill = '#88d8b0', col = NA)),
xmin = -180, xmax = 180, ymin = -90, ymax = 90) +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) +
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) +
geom_sf(data = lake_victoria, fill = "blue", color = "darkblue", size = 0.5) +
geom_sf(data = rivers_in_kenya, color = "darkblue", size = 0.5) +
coord_sf(xlim = c(33, 42), ylim = c(-5, 6), expand = FALSE) +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none") +
annotation_scale(location = "br", width_hint = 0.5)  # Add scale bar
library(ggspatial)
library(grid)  # For low-level drawing
# Continue with your existing ggplot map object, then add these
map <- ggplot() +
annotation_custom(ggplot2::rectGrob(gp = grid::gpar(fill = '#88d8b0', col = NA)),
xmin = -180, xmax = 180, ymin = -90, ymax = 90) +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) +
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) +
geom_sf(data = lake_victoria, fill = "blue", color = "darkblue", size = 0.5) +
geom_sf(data = rivers_in_kenya, color = "darkblue", size = 0.5) +
coord_sf(xlim = c(33, 42), ylim = c(-5, 6), expand = FALSE) +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none") +
annotation_scale(location = "br", width_hint = 0.5)  # Add scale bar
library(ggspatial)
library(grid)  # For low-level drawing
# Continue with your existing ggplot map object, then add these
map <- ggplot() +
annotation_custom(ggplot2::rectGrob(gp = grid::gpar(fill = '#88d8b0', col = NA)),
xmin = -180, xmax = 180, ymin = -90, ymax = 90) +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) +
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) +
geom_sf(data = lake_victoria, fill = "blue", color = "darkblue", size = 0.5) +
geom_sf(data = rivers_in_kenya, color = "darkblue", size = 0.5) +
coord_sf(xlim = c(33, 42), ylim = c(-5, 6), expand = FALSE) +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none") +
annotation_scale(location = "br", width_hint = 0.5)  # Add scale bar
# Load required libraries
library(ggplot2)
library(sf)
library(rnaturalearth)
# Read the administrative and national boundary shapefiles
kenya_regions <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_region_boundary.zip/kenya_administrative_region_boundary/kenya_administrative_region_boundary.shp")
kenya_national_boundary <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_national_boundary.zip/kenya_administrative_national_boundary/kenya_administrative_national_boundary.shp")
# Load the world map for neighboring countries context
world <- ne_countries(scale = "medium", returnclass = "sf")
# Load major rivers and select those in Kenya (intersects with kenya_national_boundary for accurate scoping)
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
rivers_in_kenya <- st_intersection(rivers, kenya_national_boundary)
# Load major lakes and filter for Lake Victoria
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Immediately surrounding countries
surrounding_countries <- c("United Republic of Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load major lakes and rivers
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
# Filter for Lake Victoria
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Intersect rivers with Kenya's boundary for major waterways within Kenya
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")################################################################################
sites_data <- read_csv("/Users/george/Downloads/region_mdr_sites_samples.csv")
library(readr)
sites_data <- read_csv("/Users/george/Downloads/region_mdr_sites_samples.csv")
sites_data$lat <- as.numeric(sites_data$lat)
sites_data$lon <- as.numeric(sites_data$lon)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
geom_point(data = sites_data, aes(x = longitude, y = latitude), color = "red", size = 2) +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")################################################################################
sites_data
# Assuming the file path is
sites_data_pre <- read_csv("/Users/george/Downloads/region_mdr_sites_samples.csv")
sites_data <- sites_data_pre[,4:5]
# View the first few rows of the data to understand its structure
head(sites_data)
# Ensure latitude and longitude are numeric (if not already)
sites_data$lat <- as.numeric(sites_data$lat)
sites_data$lon <- as.numeric(sites_data$lon)
# Read the administrative and national boundary shapefiles
kenya_regions <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_region_boundary.zip/kenya_administrative_region_boundary/kenya_administrative_region_boundary.shp")
kenya_national_boundary <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_national_boundary.zip/kenya_administrative_national_boundary/kenya_administrative_national_boundary.shp")
# Load the world map for neighboring countries context
world <- ne_countries(scale = "medium", returnclass = "sf")
# Load major rivers and select those in Kenya (intersects with kenya_national_boundary for accurate scoping)
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
rivers_in_kenya <- st_intersection(rivers, kenya_national_boundary)
# Load major lakes and filter for Lake Victoria
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Immediately surrounding countries
surrounding_countries <- c("United Republic of Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load major lakes and rivers
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
# Filter for Lake Victoria
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Intersect rivers with Kenya's boundary for major waterways within Kenya
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
geom_point(data = sites_data, aes(x = longitude, y = latitude), color = "red", size = 2) +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")################################################################################
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
geom_point(data = sites_data, aes(x = lon, y = lat), color = "red", size = 2) +
theme_minimal() +
labs(title = "Kenya and Surrounding Countries",
subtitle = "Highlighting Lake Victoria and Major Waterways") +
theme(legend.position = "none")################################################################################
sites_data$lat
sites_data
# Assuming the file path is
sites_data_pre <- read_csv("/Users/george/Downloads/region_mdr_sites_samples.csv")
sites_data <- sites_data_pre[,4:5]
# View the first few rows of the data to understand its structure
head(sites_data)
# Ensure latitude and longitude are numeric (if not already)
sites_data$lat <- as.numeric(sites_data$lat)
sites_data$lon <- as.numeric(sites_data$lon)
colnames(sites_data)[4,5] <- c("latitude","longitude")
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
geom_point(data = sites_data, aes(x = longitude, y = latitude), color = "red", size = 2) +
theme_minimal() +
theme(legend.position = "none")################################################################################
sites_data
# Assuming the file path is
sites_data_pre <- read_csv("/Users/george/Downloads/region_mdr_sites_samples.csv")
sites_data <- sites_data_pre[,4:5]
# View the first few rows of the data to understand its structure
head(sites_data)
# Ensure latitude and longitude are numeric (if not already)
sites_data$lat <- as.numeric(sites_data$lat)
sites_data$lon <- as.numeric(sites_data$lon)
colnames(sites_data)[4,5] <- c("latitude","longitude")
# Assuming the file path is
sites_data_pre <- read_csv("/Users/george/Downloads/region_mdr_sites_samples.csv")
sites_data <- sites_data_pre[,4:5]
# View the first few rows of the data to understand its structure
head(sites_data)
# Ensure latitude and longitude are numeric (if not already)
sites_data$lat <- as.numeric(sites_data$lat)
sites_data$lon <- as.numeric(sites_data$lon)
sites_data
# Assuming the file path is
sites_data_pre <- read_csv("/Users/george/Downloads/region_mdr_sites_samples.csv")
sites_data <- sites_data_pre[,4:5]
# View the first few rows of the data to understand its structure
head(sites_data)
# Ensure latitude and longitude are numeric (if not already)
sites_data$lat <- as.numeric(sites_data$lat)
sites_data$lon <- as.numeric(sites_data$lon)
colnames(sites_data)[1,2] <- c("latitude","longitude")
sites_data
colnames(sites_data)
colnames(sites_data)[1]
colnames(sites_data)[1:2] <- c("latitude","longitude")
# Read the administrative and national boundary shapefiles
kenya_regions <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_region_boundary.zip/kenya_administrative_region_boundary/kenya_administrative_region_boundary.shp")
kenya_national_boundary <- st_read("/Users/george/Bailey_lab/kenya_longitudinal/manuscript/figures/geospatial_plotting/kenya_administrative_national_boundary.zip/kenya_administrative_national_boundary/kenya_administrative_national_boundary.shp")
# Load the world map for neighboring countries context
world <- ne_countries(scale = "medium", returnclass = "sf")
# Load major rivers and select those in Kenya (intersects with kenya_national_boundary for accurate scoping)
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
rivers_in_kenya <- st_intersection(rivers, kenya_national_boundary)
# Load major lakes and filter for Lake Victoria
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Immediately surrounding countries
surrounding_countries <- c("United Republic of Tanzania", "Uganda", "Somalia", "Ethiopia", "South Sudan")
# Load countries for context and filter for surrounding countries
world <- ne_countries(scale = "medium", returnclass = "sf")
context_countries <- world[world$admin %in% surrounding_countries, ]
# Load major lakes and rivers
lakes <- ne_download(scale = "medium", type = 'lakes', category = 'physical', returnclass = "sf")
rivers <- ne_download(scale = 10, type = 'rivers_lake_centerlines', category = 'physical', returnclass = "sf")
# Filter for Lake Victoria
lake_victoria <- lakes[lakes$name == "Lake Victoria", ]
# Intersect rivers with Kenya's boundary for major waterways within Kenya
kenya_boundary_sf <- st_as_sf(kenya_national_boundary) # Ensure it's an sf object
rivers_in_kenya <- st_intersection(rivers, kenya_boundary_sf)
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "lightgrey", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
geom_point(data = sites_data, aes(x = longitude, y = latitude), color = "red", size = 2) +
theme_minimal() +
theme(legend.position = "none")################################################################################
# Plotting
ggplot() +
geom_sf(data = context_countries, fill = "tan", color = "black", size = 0.25) + # Surrounding countries
geom_sf(data = kenya_national_boundary, fill = NA, color = "black", size = 0.5) + # Kenya outline
geom_sf(data = lake_victoria, fill = "blue", color = "blue", size = 0.5) + # Lake Victoria
geom_sf(data = rivers_in_kenya, color = "blue", size = 0.5) + # Major waterways
geom_point(data = sites_data, aes(x = longitude, y = latitude), color = "red", size = 2) +
theme_minimal() +
theme(legend.position = "none")################################################################################
setwd("/Users/george/Bailey_lab/miplicorn_dev/vcfFilterPlot")
devtools::install()
devtools::document()
devtools::install()
rsconnect::deployApp
install.packages("rsconnect")
rsconnect::deployApp
rsconnect::deployApp()
devtools::check()
library(shiny)
library(gdsfmt)
library(SeqArray)
library(ggplot2)
library(dplyr)
# default maximum file size is ~30Mb - can make this user adjustable later if running on remote server with more memory. Want to prevent crashing local computer.
options(shiny.maxRequestSize=30*1024^2)
shinyApp(ui = ui, server = server)
devtools::document()
devtools::install()
devtools::check()
devtools::document()
devtools::install()
devtools::check()
devtools::document()
devtools::install()
devtools::check()
runMyApp()
devtools::install()
devtools::install()
devtools::check()
